## WARNING
## This file was autogenerated, and _will_ be overwritten by Halyard.
## Any edits you make here _will_ be lost.

spectator:
  applicationName: ${spring.application.name}
  webEndpoint:
    enabled: false

appengine:
  enabled: false
  accounts: []
aws:
  enabled: false
  accounts: []
  bakeryDefaults:
    baseImages: []
  defaultKeyPairTemplate: '{{name}}-keypair'
  defaultRegions:
  - name: us-west-2
  defaults:
    iamRole: BaseIAMRole
ecs:
  enabled: false
  accounts: []
azure:
  enabled: false
  accounts: []
  bakeryDefaults:
    templateFile: azure-linux.json
    baseImages: []
dcos:
  enabled: false
  accounts: []
  clusters: []
dockerRegistry:
  enabled: false
  accounts: []
google:
  enabled: false
  accounts: []
  bakeryDefaults:
    templateFile: gce.json
    baseImages: []
    zone: us-central1-f
    network: default
    useInternalIp: false
huaweicloud:
  enabled: false
  accounts: []
  bakeryDefaults:
    baseImages: []
kubernetes:
  enabled: true
  accounts:
  - name: my-k8s-v2-account
    requiredGroupMembership: []
    providerVersion: V2
    permissions: {}
    dockerRegistries: []
    context: minikube
    configureImagePullSecrets: true
    cacheThreads: 1
    namespaces: []
    omitNamespaces: []
    kinds: []
    omitKinds: []
    customResources: []
    cachingPolicies: []
    kubeconfigFile:
    oAuthScopes: []
    onlySpinnakerManaged: false
  primaryAccount: my-k8s-v2-account
oracle:
  enabled: false
  accounts: []
  bakeryDefaults:
    templateFile: oci.json
    baseImages: []
cloudfoundry:
  enabled: false
  accounts: []

artifacts:
  bitbucket:
    enabled: false
    accounts: []
  gcs:
    enabled: false
    accounts: []
  oracle:
    enabled: false
    accounts: []
  github:
    enabled: false
    accounts: []
  gitlab:
    enabled: false
    accounts: []
  gitrepo:
    enabled: false
    accounts: []
  http:
    enabled: false
    accounts: []
  helm:
    enabled: false
    accounts: []
  s3:
    enabled: false
    accounts: []
  maven:
    enabled: false
    accounts: []
  templates: []

# halconfig

admin.tasks.shutdownWaitSeconds: 600 # 10 minutes

server:
  port: ${services.clouddriver.port:7002}
  address: ${services.clouddriver.host:localhost}

caching:
  redis:
    hashingEnabled: true


sql:
  enabled: true
  taskRepository:
    enabled: true
  cache:
    enabled: true
    # These parameters were determined to be optimal via benchmark comparisons
    # in the Netflix production environment with Aurora. Setting these too low
    # or high may negatively impact performance. These values may be sub-optimal
    # in some environments.
    readBatchSize: 500
    writeBatchSize: 300
  scheduler:
    enabled: true
  connectionPools:
    default:
      # additional connection pool parameters are available here,
      # for more detail and to view defaults, see:
      # https://github.com/spinnaker/kork/blob/master/kork-sql/src/main/kotlin/com/netflix/spinnaker/kork/sql/config/ConnectionPoolProperties.kt
      default: true
      jdbcUrl: ${sql_jdbcUrl:jdbc:mysql://mysql-service:3306/clouddriver}
      user: ${sql_user:clouddriver_service}
      password: ${sql_password:coding123}
    # The following tasks connection pool is optional. At Netflix, clouddriver
    # instances pointed to Aurora read replicas have a tasks pool pointed at the
    # master. Instances where the default pool is pointed to the master omit a
    # separate tasks pool.
    #tasks:
    #  user: ${sql_user:clouddriver_service}
    #  jdbcUrl: ${sql_jdbcUrl:jdbc:mysql://mysql-service:3306/clouddriver}
    #  password: ${sql_password:coding123}
  migration:
    user: ${sql_migration_user:clouddriver_migrate}
    jdbcUrl: ${sql_migration_jdbcUrl:jdbc:mysql://mysql-service:3306/clouddriver}
    password: ${sql_migration_password:coding123}

redis:
  connection: ${services.redis.baseUrl:redis://localhost:6379}
  enabled: false
  cache:
    enabled: false
  scheduler:
    enabled: false
  taskRepository:
    enabled: false

